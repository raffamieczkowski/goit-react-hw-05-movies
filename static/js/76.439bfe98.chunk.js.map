{"version":3,"file":"static/js/76.439bfe98.chunk.js","mappings":"4KAEMA,EAAU,mCAEVC,EAAM,CACVC,kBAAkB,WAAD,wBAAE,6GAEQC,EAAAA,EAAAA,IAAA,kEACsCH,IAH9C,cAETI,EAFS,yBAKRA,EAASC,MALD,sCAOT,IAAIC,MAAM,mCAAV,MAPS,yDAAF,kDAAC,GAWlBC,aAAa,WAAD,wBAAE,WAAOC,GAAP,gGAEaL,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBACiDQ,IAH9D,cAEJJ,EAFI,yBAKHA,EAASC,MALN,sCAOJ,IAAIC,MAAM,2BAAV,MAPI,yDAAF,mDAAC,GAWbG,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCV,IAH9C,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBK,gBAAgB,WAAD,wBAAE,WAAOD,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBM,gBAAgB,WAAD,wBAAE,WAAOF,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,IAYlB,K,oIC5DA,EAAiC,6BAAjC,EAA0E,wBAA1E,EAA+G,yBAA/G,EAAoJ,wB,SCkCpJ,EA9Ba,WACX,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEIjB,EAAAA,EAAAA,gBAAoBS,GAFxB,OAEbN,EAFa,OAGnBY,EAAQZ,EAASW,MAHE,gDAKnBI,QAAQC,MAAM,8BAAd,MALmB,yDAAH,qDASpBF,GACD,GAAE,CAACR,KAGF,iBAAKW,UAAWC,EAAhB,WACE,uCACCP,EAAKQ,KAAI,SAACC,GAAD,OACR,iBAAKH,UAAWC,EAAhB,WACE,gBAAKG,IAAG,yCAAoCD,EAAME,cAAgBC,IAAKH,EAAMI,KAAMP,UAAWC,KAC9F,cAAGD,UAAWC,EAAd,SAAoCE,EAAMI,SAFFJ,EAAMK,GADxC,MAQf,C","sources":["components/Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26f6d9f8ffef9d57c5c0faad8d71760f';\n\nconst api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch trending movies:', error);\n    }\n  },\n\n  searchMovies: async (query) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to search movies:', error);\n    }\n  },\n\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie details:', error);\n    }\n  },\n\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie credits:', error);\n    }\n  },\n\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie reviews:', error);\n    }\n  },\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast-container\":\"Cast_cast-container__VofqV\",\"cast-item\":\"Cast_cast-item__6xvgR\",\"cast-image\":\"Cast_cast-image__Lf-J8\",\"cast-name\":\"Cast_cast-name__4kFaz\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../Api/Api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await api.getMovieCredits(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error('Failed to fetch movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles['cast-container']}>\n      <h2>Movie Cast</h2>\n      {cast.map((actor) => (\n        <div className={styles['cast-item']} key={actor.id}>\n          <img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} className={styles['cast-image']} />\n          <p className={styles['cast-name']}>{actor.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","api","getTrendingMovies","axios","response","data","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","useParams","useState","cast","setCast","useEffect","fetchMovieCast","console","error","className","styles","map","actor","src","profile_path","alt","name","id"],"sourceRoot":""}