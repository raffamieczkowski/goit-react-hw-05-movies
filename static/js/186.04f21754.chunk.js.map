{"version":3,"file":"static/js/186.04f21754.chunk.js","mappings":"6KAEMA,EAAU,mCAEVC,EAAM,CACVC,kBAAkB,WAAD,wBAAE,6GAEQC,EAAAA,EAAAA,IAAA,kEACsCH,IAH9C,cAETI,EAFS,yBAKRA,EAASC,MALD,sCAOT,IAAIC,MAAM,mCAAV,MAPS,yDAAF,kDAAC,GAWlBC,aAAa,WAAD,wBAAE,WAAOC,GAAP,gGAEaL,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBACiDQ,IAH9D,cAEJJ,EAFI,yBAKHA,EAASC,MALN,sCAOJ,IAAIC,MAAM,2BAAV,MAPI,yDAAF,mDAAC,GAWbG,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCV,IAH9C,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBK,gBAAgB,WAAD,wBAAE,WAAOD,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBM,gBAAgB,WAAD,wBAAE,WAAOF,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,IAYlB,K,wGC3BA,UA9BgB,WACd,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECjB,EAAAA,EAAAA,gBAAoBS,GAFrB,OAEhBN,EAFgB,OAGtBY,EAAWZ,EAASe,SAHE,gDAKtBC,QAAQC,MAAM,iCAAd,MALsB,yDAAH,qDASvBH,GACD,GAAE,CAACR,KAGF,4BACE,0CACCK,EAAQO,KAAI,SAACC,GAAD,OACX,4BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOG,GADN,MAQlB,C","sources":["components/Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26f6d9f8ffef9d57c5c0faad8d71760f';\n\nconst api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch trending movies:', error);\n    }\n  },\n\n  searchMovies: async (query) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to search movies:', error);\n    }\n  },\n\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie details:', error);\n    }\n  },\n\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie credits:', error);\n    }\n  },\n\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie reviews:', error);\n    }\n  },\n};\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../Api/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await api.getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error('Failed to fetch movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Movie Reviews</h2>\n      {reviews.map((review) => (\n        <div key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","api","getTrendingMovies","axios","response","data","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","results","console","error","map","review","author","content","id"],"sourceRoot":""}