{"version":3,"file":"static/js/501.35a2a63f.chunk.js","mappings":"6KAEMA,EAAU,mCAEVC,EAAM,CACVC,kBAAkB,WAAD,wBAAE,6GAEQC,EAAAA,EAAAA,IAAA,kEACsCH,IAH9C,cAETI,EAFS,yBAKRA,EAASC,MALD,sCAOT,IAAIC,MAAM,mCAAV,MAPS,yDAAF,kDAAC,GAWlBC,aAAa,WAAD,wBAAE,WAAOC,GAAP,gGAEaL,EAAAA,EAAAA,IAAA,4DACgCH,EADhC,kBACiDQ,IAH9D,cAEJJ,EAFI,yBAKHA,EAASC,MALN,sCAOJ,IAAIC,MAAM,2BAAV,MAPI,yDAAF,mDAAC,GAWbG,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBACoCV,IAH9C,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBK,gBAAgB,WAAD,wBAAE,WAAOD,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,GAWhBM,gBAAgB,WAAD,wBAAE,WAAOF,GAAP,gGAEUP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BAC4CV,IAHtD,cAEPI,EAFO,yBAKNA,EAASC,MALH,sCAOP,IAAIC,MAAM,iCAAV,MAPO,yDAAF,mDAAC,IAYlB,K,6IC5DA,GAAgB,iBAAiB,0CAA0C,sBAAsB,+CAA+C,sBAAsB,+CAA+C,sBAAsB,gD,SCuD3O,EAnD2B,WACzB,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAmB,IAAIC,gBAAgBL,EAASM,QAAQC,IAAI,SAClE,GAAsCC,EAAAA,EAAAA,UAASJ,GAAoB,IAAnE,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,iGAEnBL,EAFmB,gCAGErB,EAAAA,EAAAA,aAAiBqB,GAHnB,OAGflB,EAHe,OAIrBqB,EAAiBrB,EAASwB,SAJL,uDAOvBC,QAAQC,MAAM,kCAAd,MAPuB,yDAAH,qDAWxBH,GACD,GAAE,CAACL,IAOJ,OACE,4BACE,4CACA,kBAAMS,SARW,SAACC,GACpBA,EAAEC,iBACFlB,EAAS,yBAAD,OAA0BO,GACnC,EAKiCY,UAAWC,EAAAA,cAAzC,WACE,kBACEC,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOT,EAAeS,EAAEO,OAAOF,MAA/B,EACVG,YAAY,mBACZN,UAAWC,EAAAA,mBAEb,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,iBAAjC,wBAEF,eAAID,UAAWC,EAAAA,uBAAf,SACGX,EAAciB,KAAI,SAACC,GAAD,OACjB,eAAIR,UAAWC,EAAAA,uBAAf,UACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMV,UAAWC,EAAAA,uBAA5C,SAA4EO,EAAMG,SADjCH,EAAME,GADxC,QAQ1B,C","sources":["components/Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/MovieSearchResult/MovieSearchResult.module.css?2865","components/MovieSearchResult/MovieSearchResult.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26f6d9f8ffef9d57c5c0faad8d71760f';\n\nconst api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch trending movies:', error);\n    }\n  },\n\n  searchMovies: async (query) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to search movies:', error);\n    }\n  },\n\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie details:', error);\n    }\n  },\n\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie credits:', error);\n    }\n  },\n\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie reviews:', error);\n    }\n  },\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"search-results\":\"MovieSearchResult_search-results__7WTDO\",\"search-results-list\":\"MovieSearchResult_search-results-list__EUMF4\",\"search-results-item\":\"MovieSearchResult_search-results-item__sIrqq\",\"search-results-link\":\"MovieSearchResult_search-results-link__-CyzS\"};","import React, { useEffect, useState } from 'react';\nimport { useLocation, Link, useNavigate } from 'react-router-dom';\nimport api from '../Api/Api';\nimport styles from './MovieSearchResult.module.css';\n\nconst MovieSearchResults = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchQueryParam = new URLSearchParams(location.search).get('query');\n  const [searchQuery, setSearchQuery] = useState(searchQueryParam || '');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        if (searchQuery) {\n          const response = await api.searchMovies(searchQuery);\n          setSearchResults(response.results);\n        }\n      } catch (error) {\n        console.error('Failed to fetch search results:', error);\n      }\n    };\n\n    fetchSearchResults();\n  }, [searchQuery]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    navigate(`/movies/results?query=${searchQuery}`);\n  };\n\n  return (\n    <div>\n      <h1>Search Results</h1>\n      <form onSubmit={handleSearch} className={styles['search-bar']}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search movies...\"\n          className={styles['search-input']}\n        />\n        <button type=\"submit\" className={styles['search-button']}>Search</button>\n      </form>\n      <ul className={styles['search-results-list']}>\n        {searchResults.map((movie) => (\n          <li className={styles['search-results-item']} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} className={styles['search-results-link']}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieSearchResults;\n"],"names":["API_KEY","api","getTrendingMovies","axios","response","data","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","location","useLocation","navigate","useNavigate","searchQueryParam","URLSearchParams","search","get","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","useEffect","fetchSearchResults","results","console","error","onSubmit","e","preventDefault","className","styles","type","value","onChange","target","placeholder","map","movie","to","id","title"],"sourceRoot":""}