{"version":3,"file":"static/js/455.a18e68de.chunk.js","mappings":"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","sources":["components/Api/Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDeatils/MovieDetails.module.css?5daa","components/MovieDeatils/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26f6d9f8ffef9d57c5c0faad8d71760f';\n\nconst api = {\n  getTrendingMovies: async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch trending movies:', error);\n    }\n  },\n\n  searchMovies: async (query) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to search movies:', error);\n    }\n  },\n\n  getMovieDetails: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie details:', error);\n    }\n  },\n\n  getMovieCredits: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie credits:', error);\n    }\n  },\n\n  getMovieReviews: async (movieId) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to fetch movie reviews:', error);\n    }\n  },\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast-container\":\"Cast_cast-container__VofqV\",\"cast-item\":\"Cast_cast-item__6xvgR\",\"cast-image\":\"Cast_cast-image__Lf-J8\",\"cast-name\":\"Cast_cast-name__4kFaz\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../Api/Api';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await api.getMovieCredits(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error('Failed to fetch movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles['cast-container']}>\n      <h2>Movie Cast</h2>\n      {cast.map((actor) => (\n        <div className={styles['cast-item']} key={actor.id}>\n          <img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} className={styles['cast-image']} />\n          <p className={styles['cast-name']}>{actor.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie-details\":\"MovieDetails_movie-details__9nw0V\",\"movie-image\":\"MovieDetails_movie-image__71HRV\",\"movie-info\":\"MovieDetails_movie-info__rVxBb\",\"genres-list\":\"MovieDetails_genres-list__7LvyI\",\"genres-item\":\"MovieDetails_genres-item__jNg-+\",\"additional-info\":\"MovieDetails_additional-info__lUHpO\",\"toggle-button\":\"MovieDetails_toggle-button__Fi3Gl\",\"reviews-message\":\"MovieDetails_reviews-message__XCl-f\"};","import React, { useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport api from '../Api/Api';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await api.getMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error('Failed to fetch movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n  };\n\n  return (\n    <div>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} className={styles['movie-image']} />\n\n      <h2>Genres:</h2>\n      <ul className={styles['genres-list']}>\n        {movie.genres.map((genre) => (\n          <li className={styles['genres-item']} key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n\n      <h2>Additional Information:</h2>\n      <ul className={styles['additional-info']}>\n        <li>\n          <button onClick={toggleCast} className={styles['toggle-button']}>{showCast ? 'Hide Cast' : 'Show Cast'}</button>\n          {showCast && <Cast />}\n        </li>\n        <li>\n          <button onClick={toggleReviews} className={styles['toggle-button']}>{showReviews ? 'Hide Reviews' : 'Show Reviews'}</button>\n          {showReviews ? (\n            <Reviews movieId={movieId} />\n          ) : (\n            movie.vote_count === 0 && <p className={styles['reviews-message']}>We don't have any reviews for this movie.</p>\n          )}\n        </li>\n      </ul>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"review-list\":\"Reviews_review-list__ufE75\",\"review-item\":\"Reviews_review-item__86X7d\",\"review-author\":\"Reviews_review-author__0+Qct\",\"review-content\":\"Reviews_review-content__zziG0\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../Api/Api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await api.getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error('Failed to fetch movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Movie Reviews</h2>\n      <ul className={styles['review-list']}>\n        {reviews.map((review) => (\n          <li className={styles['review-item']} key={review.id}>\n            <h3 className={styles['review-author']}>{review.author}</h3>\n            <p className={styles['review-content']}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","api","getTrendingMovies","axios","response","data","Error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","useParams","useState","cast","setCast","useEffect","fetchMovieCast","console","error","className","styles","map","actor","src","profile_path","alt","name","id","movie","setMovie","showCast","setShowCast","showReviews","setShowReviews","fetchMovieDetails","title","overview","poster_path","genres","genre","onClick","Cast","Reviews","vote_count","reviews","setReviews","fetchMovieReviews","results","review","author","content"],"sourceRoot":""}